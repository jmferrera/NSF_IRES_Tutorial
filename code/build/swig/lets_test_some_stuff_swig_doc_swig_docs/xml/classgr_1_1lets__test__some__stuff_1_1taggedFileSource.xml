<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classgr_1_1lets__test__some__stuff_1_1taggedFileSource" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>gr::lets_test_some_stuff::taggedFileSource</compoundname>
    <basecompoundref prot="public" virt="virtual">sync_block</basecompoundref>
    <includes refid="taggedFileSource_8h" local="no">taggedFileSource.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgr_1_1lets__test__some__stuff_1_1taggedFileSource_1ad3fdedddee90b7f97d9cff3051d8d9ae" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classgr_1_1lets__test__some__stuff_1_1taggedFileSource" kindref="compound">taggedFileSource</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;taggedFileSource&gt; gr::lets_test_some_stuff::taggedFileSource::sptr</definition>
        <argsstring></argsstring>
        <name>sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sam/Documents/GNU_RADIO/blocks/gr-lets_test_some_stuff/include/lets_test_some_stuff/taggedFileSource.h" line="41" column="1" bodyfile="/home/sam/Documents/GNU_RADIO/blocks/gr-lets_test_some_stuff/include/lets_test_some_stuff/taggedFileSource.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgr_1_1lets__test__some__stuff_1_1taggedFileSource_1a6c82fed47e0b48a575a04a74c6ea52d9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgr_1_1lets__test__some__stuff_1_1taggedFileSource_1ad3fdedddee90b7f97d9cff3051d8d9ae" kindref="member">sptr</ref></type>
        <definition>static sptr gr::lets_test_some_stuff::taggedFileSource::make</definition>
        <argsstring>(size_t itemsize, const char *filename, bool repeat=false, int blockLength=0)</argsstring>
        <name>make</name>
        <param>
          <type>size_t</type>
          <declname>itemsize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>repeat</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>int</type>
          <declname>blockLength</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Create a file source. </para>        </briefdescription>
        <detaileddescription>
<para>Opens <computeroutput>filename</computeroutput> as a source of items into a flowgraph. The data is expected to be in binary format, item after item. The <computeroutput>itemsize</computeroutput> of the block determines the conversion from bits to items.</para><para>If <computeroutput>repeat</computeroutput> is turned on, the file will repeat the file after it&apos;s reached the end.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itemsize</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of each item in the file, in bytes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the file to source from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>repeat</parametername>
</parameternamelist>
<parameterdescription>
<para>repeat file from start </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sam/Documents/GNU_RADIO/blocks/gr-lets_test_some_stuff/include/lets_test_some_stuff/taggedFileSource.h" line="58" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgr_1_1lets__test__some__stuff_1_1taggedFileSource_1adca0f7cb154aa51196baff81beb48d67" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool gr::lets_test_some_stuff::taggedFileSource::seek</definition>
        <argsstring>(long seek_point, int whence)=0</argsstring>
        <name>seek</name>
        <param>
          <type>long</type>
          <declname>seek_point</declname>
        </param>
        <param>
          <type>int</type>
          <declname>whence</declname>
        </param>
        <briefdescription>
<para>seek file to <computeroutput>seek_point</computeroutput> relative to <computeroutput>whence</computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seek_point</parametername>
</parameternamelist>
<parameterdescription>
<para>sample offset in file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>whence</parametername>
</parameternamelist>
<parameterdescription>
<para>one of SEEK_SET, SEEK_CUR, SEEK_END (man fseek) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sam/Documents/GNU_RADIO/blocks/gr-lets_test_some_stuff/include/lets_test_some_stuff/taggedFileSource.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1lets__test__some__stuff_1_1taggedFileSource_1aa3974b8d404414a66546449a87508b18" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::lets_test_some_stuff::taggedFileSource::open</definition>
        <argsstring>(const char *filename, bool repeat)=0</argsstring>
        <name>open</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>repeat</declname>
        </param>
        <briefdescription>
<para>Opens a new file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the file to source from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>repeat</parametername>
</parameternamelist>
<parameterdescription>
<para>repeat file from start </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sam/Documents/GNU_RADIO/blocks/gr-lets_test_some_stuff/include/lets_test_some_stuff/taggedFileSource.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1lets__test__some__stuff_1_1taggedFileSource_1a2b8a060a7033634d8401215f345e0156" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::lets_test_some_stuff::taggedFileSource::close</definition>
        <argsstring>()=0</argsstring>
        <name>close</name>
        <briefdescription>
<para>Close the file handle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sam/Documents/GNU_RADIO/blocks/gr-lets_test_some_stuff/include/lets_test_some_stuff/taggedFileSource.h" line="79" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Read stream from file. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>gr::lets_test_some_stuff::taggedFileSource</label>
        <link refid="classgr_1_1lets__test__some__stuff_1_1taggedFileSource"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>sync_block</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>gr::lets_test_some_stuff::taggedFileSource</label>
        <link refid="classgr_1_1lets__test__some__stuff_1_1taggedFileSource"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>sync_block</label>
      </node>
    </collaborationgraph>
    <location file="/home/sam/Documents/GNU_RADIO/blocks/gr-lets_test_some_stuff/include/lets_test_some_stuff/taggedFileSource.h" line="37" column="1" bodyfile="/home/sam/Documents/GNU_RADIO/blocks/gr-lets_test_some_stuff/include/lets_test_some_stuff/taggedFileSource.h" bodystart="36" bodyend="80"/>
    <listofallmembers>
      <member refid="classgr_1_1lets__test__some__stuff_1_1taggedFileSource_1a2b8a060a7033634d8401215f345e0156" prot="public" virt="pure-virtual"><scope>gr::lets_test_some_stuff::taggedFileSource</scope><name>close</name></member>
      <member refid="classgr_1_1lets__test__some__stuff_1_1taggedFileSource_1a6c82fed47e0b48a575a04a74c6ea52d9" prot="public" virt="non-virtual"><scope>gr::lets_test_some_stuff::taggedFileSource</scope><name>make</name></member>
      <member refid="classgr_1_1lets__test__some__stuff_1_1taggedFileSource_1aa3974b8d404414a66546449a87508b18" prot="public" virt="pure-virtual"><scope>gr::lets_test_some_stuff::taggedFileSource</scope><name>open</name></member>
      <member refid="classgr_1_1lets__test__some__stuff_1_1taggedFileSource_1adca0f7cb154aa51196baff81beb48d67" prot="public" virt="pure-virtual"><scope>gr::lets_test_some_stuff::taggedFileSource</scope><name>seek</name></member>
      <member refid="classgr_1_1lets__test__some__stuff_1_1taggedFileSource_1ad3fdedddee90b7f97d9cff3051d8d9ae" prot="public" virt="non-virtual"><scope>gr::lets_test_some_stuff::taggedFileSource</scope><name>sptr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
